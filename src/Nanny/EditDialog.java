/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditDialog.java
 *
 * Created on Jun 29, 2009, 4:00:46 PM
 */
package Nanny;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author CristianoT
 */
public class EditDialog extends javax.swing.JDialog {

    private String sConn = null;
    private Entity nanny;

    /** Creates new form EditDialog */
    public EditDialog(java.awt.Frame parent, boolean modal, Entity nanny, String sConn) {
        super(parent, modal);
        this.nanny = nanny;
        initComponents();
        txtCode.setText("" + nanny.getCode());
        txtName.setText(nanny.getName());
        txtYearOfBirth.setText("" + nanny.getYearofbirth());
        txaAddress.setText(nanny.getAddress());
        txtPhone.setText(nanny.getPhone());
        txtMail.setText(nanny.getMail());
        txtChildAssignedToHer.setText("" + nanny.getChildassignedtoher());
        txtWorkingHours.setText("" + nanny.getWorkinghours());
        txtCharge.setText("" + nanny.getCharge());
        this.sConn = sConn;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtYearOfBirth = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtCharge = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMail = new javax.swing.JTextField();
        txtWorkingHours = new javax.swing.JTextField();
        txtChildAssignedToHer = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaAddress = new javax.swing.JTextArea();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit information of this nanny");

        jLabel1.setText("Code :");

        jLabel2.setText("Year of Birth :");

        jLabel3.setText("Phone :");

        jLabel4.setText("Charge :");

        txtCode.setEnabled(false);

        jLabel5.setText("Name :");

        jLabel6.setText("Mail :");

        jLabel7.setText("Working Hours :");

        jLabel8.setText("Child Assigned to :");

        jLabel9.setText("Address :");

        txaAddress.setColumns(20);
        txaAddress.setRows(5);
        jScrollPane1.setViewportView(txaAddress);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close2.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("VNI-Present", 1, 24));
        jLabel11.setForeground(new java.awt.Color(0, 0, 102));
        jLabel11.setText("EDIT NANNY");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCode, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(txtYearOfBirth)
                            .addComponent(txtPhone)
                            .addComponent(txtCharge))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtChildAssignedToHer)
                            .addComponent(txtName)
                            .addComponent(txtMail)
                            .addComponent(txtWorkingHours, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose)
                .addContainerGap(139, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(jLabel11)
                .addContainerGap(182, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtYearOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(txtWorkingHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(txtChildAssignedToHer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnReset)
                    .addComponent(btnClose))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        String message = "Enter the following detail(s) correctly: \n";

        if (txtName.getText().equals("")) {
            flag = false;
            message += "- Nanny's name. Please !! \n";
            txtName.requestFocus(true);
            txtName.selectAll();
        }



        if (txtName.getText().trim().equalsIgnoreCase(nanny.getName())) {
        } else {

            try {
                if ((new Business("tbl_Nanny", sConn).checkActivity("tbl_Nanny", txtName.getText().trim()).next())) {
                    message += "- Nanny's name exists !!!";
                    flag = false;
                    txtName.requestFocus(true);
                    txtName.selectAll();
                }
            } catch (SQLException ex) {
                Logger.getLogger(AddDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        int year = 0;

        if (txtYearOfBirth.getText().trim().equals("")) {
            flag = false;
            message += "- Nanny's birthyear. Please !! \n";
        }else{
            year = Integer.parseInt(txtYearOfBirth.getText());
        }
        if (txtYearOfBirth.getText().length() != 4) {
            flag = false;
            message += "- Nanny's birthyear must be 4 characters !! \n";
            txtYearOfBirth.requestFocus(true);
            txtYearOfBirth.selectAll();
        }

        if (txaAddress.getText().equals("")) {
            flag = false;
            message += "- Nanny's address. Please !! \n";
            txaAddress.requestFocus(true);
            txaAddress.selectAll();
        }
        if (txtPhone.getText().equals("")) {
            flag = false;
            message += "- Nanny's phone. Please !! \n";
            txtPhone.requestFocus(true);
            txtPhone.selectAll();
        }
//        if (txtMail.getText().equals("")) {
//            flag = false;
//            message += "- Nanny's email. Please !! \n";
//            txtMail.requestFocus(true);
//            txtMail.selectAll();
//        }
        if (txtCharge.getText().equals("")) {
            flag = false;
            message += "- Charge paid to her. Please !! \n";
            txtCharge.requestFocus(true);
            txtCharge.selectAll();
        }
        if (txtWorkingHours.getText().equals("")) {
            flag = false;
            message += "- Nanny's wokinghours. Please !! \n";
            txtWorkingHours.requestFocus(true);
            txtWorkingHours.selectAll();
        }
        if (txtChildAssignedToHer.getText().equals("")) {
            flag = false;
            message += "- Child assigned to her. Please !! \n";
            txtChildAssignedToHer.requestFocus(true);
            txtChildAssignedToHer.selectAll();
        }else if (year<1970||year>1990) {
            flag = false;
            message += "- Nanny's birthyear must be between 1970 & 1990 !! \n";
            txtYearOfBirth.requestFocus(true);
            txtYearOfBirth.selectAll();
        } else if (!validateNumber(txtYearOfBirth.getText())) {
            flag = false;
            message += "- Year Of Birth must be a number !!!";
            txtYearOfBirth.requestFocus(true);
            txtYearOfBirth.selectAll();
        } else if (!validateNumber(txtPhone.getText())) {
            flag = false;
            message += "- Phone must be a number !!!";
            txtPhone.requestFocus(true);
            txtPhone.selectAll();
        } else if (!validateNumber(txtCharge.getText())) {
            flag = false;
            message += "- Charge must be a number !!!";
            txtCharge.requestFocus(true);
            txtCharge.selectAll();
        } else if (!validateNumber(txtWorkingHours.getText())) {
            flag = false;
            message += "- WorkingHours must be a number !!!";
            txtWorkingHours.requestFocus(true);
            txtWorkingHours.selectAll();
        } else if (!validateNumber(txtChildAssignedToHer.getText())) {
            flag = false;
            message += "- Child Assigned to Her must be a number !!!";
            txtChildAssignedToHer.requestFocus(true);
            txtChildAssignedToHer.selectAll();
        }

        if (flag) {
            int choice = JOptionPane.showConfirmDialog(this, "This will take effective after press YES !!!", "Update Nanny", JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                Double doubleCharge = Double.parseDouble(txtCharge.getText());
                Integer intChildAssignedToHer = Integer.parseInt(txtChildAssignedToHer.getText());
                Integer intWorkingHours = Integer.parseInt(txtWorkingHours.getText());
                Integer intYearOfBirth = Integer.parseInt(txtYearOfBirth.getText());
                Integer intCode = Integer.parseInt(txtCode.getText());
                Entity nanny = new Entity(intCode, txtName.getText(), intYearOfBirth, txaAddress.getText(), txtPhone.getText(), txtMail.getText(), doubleCharge, intWorkingHours, intChildAssignedToHer);
                DataAccessTable dao = new DataAccessTable(message, sConn);
                dao.update(nanny);
                this.setVisible(false);
            } else {
                return;
            }
        } else {
            JOptionPane.showConfirmDialog(this, message, "Error", JOptionPane.WARNING_MESSAGE);

//            txaAddress.setBackground(Color.RED);
//            txtCharge.setBackground(Color.RED);
//            txtName.setBackground(Color.RED);
//            txtName.setBackground(Color.RED);
//            txtName.setBackground(Color.RED);
//            txtName.setBackground(Color.RED);

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        resetForm(nanny);
}//GEN-LAST:event_btnResetActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_btnCloseActionPerformed
    /**
     * @param args the command line arguments
     */
    private static Boolean validateNumber(String strNumber) {
        double d;
        try {
            d = Double.parseDouble(strNumber);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private void resetForm(Entity nanny) {
        txtCode.setText("" + nanny.getCode());
        txtName.setText(nanny.getName());
        txtYearOfBirth.setText("" + nanny.getYearofbirth());
        txaAddress.setText(nanny.getAddress());
        txtPhone.setText(nanny.getPhone());
        txtMail.setText(nanny.getMail());
        txtChildAssignedToHer.setText("" + nanny.getChildassignedtoher());
        txtWorkingHours.setText("" + nanny.getWorkinghours());
        txtCharge.setText("" + nanny.getCharge());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaAddress;
    private javax.swing.JTextField txtCharge;
    private javax.swing.JTextField txtChildAssignedToHer;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtWorkingHours;
    private javax.swing.JTextField txtYearOfBirth;
    // End of variables declaration//GEN-END:variables
}
