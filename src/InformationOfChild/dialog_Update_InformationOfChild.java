/*
 * dialog_Add_Update_InformationOfChild.java
 *
 * Created on June 7, 2009, 2:50 PM
 */

package InformationOfChild;

import MainProgram.MainForm;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;
/**
 *
 * @author  Tuong Huy
 */
public class dialog_Update_InformationOfChild extends javax.swing.JDialog {
    DAO_Child daochild=null;
    public static String sConn="";
    public static Child child = null;
    public static String sSQL="";
    private static frm_ChildList frmParent=null;
    private static MainForm main=null;
    /** Creates new form dialog_Add_Update_InformationOfChild */
    
    public dialog_Update_InformationOfChild(java.awt.Frame parent, boolean modal, String _sConn, Child _child, String _sSQL, JInternalFrame _frmParent) {
        super(parent, modal);
        frmParent=(frm_ChildList) _frmParent;
        main = (MainForm)parent;
        sConn = _sConn;
        child = (Child)_child;
        daochild = new DAO_Child(sConn);
        sSQL = _sSQL;
        initComponents();
        showComboxGroupAge();
        showForm(child);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlChildProfile = new javax.swing.JPanel();
        lblLastName = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblMiddleName = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        lblGroupAge = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtMiddleName = new javax.swing.JTextField();
        txtDateOfBirth = new javax.swing.JTextField();
        cbGroupAge = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        pnlHistoryDisease = new javax.swing.JPanel();
        lblCurrentMedicataion = new javax.swing.JLabel();
        lblPassIllness = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        srcCurrentMediation = new javax.swing.JScrollPane();
        txtCurrentMedication = new javax.swing.JTextArea();
        srcPassIllness = new javax.swing.JScrollPane();
        txtPassIllness = new javax.swing.JTextArea();
        txtDoctorName = new javax.swing.JTextField();
        pnlChildDetail = new javax.swing.JPanel();
        lblParentName = new javax.swing.JLabel();
        lblWorkNumber = new javax.swing.JLabel();
        lblMobileNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        txtParentName = new javax.swing.JTextField();
        txtWorkNumber = new javax.swing.JTextField();
        txtMobileNumber = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        pnlOtherInformation = new javax.swing.JPanel();
        lblNextOfKinContact = new javax.swing.JLabel();
        lblNoteAboutChild = new javax.swing.JLabel();
        srcNextOfContact = new javax.swing.JScrollPane();
        txtNextOfKinContact = new javax.swing.JTextArea();
        srcNoteAboutChild = new javax.swing.JScrollPane();
        txtNoteOfChild = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDateRegistration = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDateReceived = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNannyName = new javax.swing.JTextField();
        btnChangeNanny = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update detail information of the child");

        pnlChildProfile.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Child profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblLastName.setText("Last name:");

        lblFirstName.setText("First name:");

        lblMiddleName.setText("Middle name:");

        lblDateOfBirth.setText("Date of birth:");

        lblGroupAge.setText("Group age:");

        cbGroupAge.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel4.setText("Date format: dd/MM/yyyy");

        org.jdesktop.layout.GroupLayout pnlChildProfileLayout = new org.jdesktop.layout.GroupLayout(pnlChildProfile);
        pnlChildProfile.setLayout(pnlChildProfileLayout);
        pnlChildProfileLayout.setHorizontalGroup(
            pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildProfileLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblGroupAge, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblMiddleName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtFirstName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(txtMiddleName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(pnlChildProfileLayout.createSequentialGroup()
                        .add(txtDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtLastName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(cbGroupAge, 0, 250, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlChildProfileLayout.setVerticalGroup(
            pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildProfileLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlChildProfileLayout.createSequentialGroup()
                        .add(txtLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtMiddleName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblMiddleName))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4)
                            .add(lblDateOfBirth))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cbGroupAge, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblGroupAge)))
                    .add(pnlChildProfileLayout.createSequentialGroup()
                        .add(25, 25, 25)
                        .add(lblFirstName))
                    .add(lblLastName))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pnlHistoryDisease.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HISTORY disease", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblCurrentMedicataion.setText("Current medication:");

        lblPassIllness.setText("Pass illness:");

        lblDoctorName.setText("Doctor name:");

        txtCurrentMedication.setColumns(20);
        txtCurrentMedication.setRows(5);
        srcCurrentMediation.setViewportView(txtCurrentMedication);

        txtPassIllness.setColumns(20);
        txtPassIllness.setRows(5);
        srcPassIllness.setViewportView(txtPassIllness);

        org.jdesktop.layout.GroupLayout pnlHistoryDiseaseLayout = new org.jdesktop.layout.GroupLayout(pnlHistoryDisease);
        pnlHistoryDisease.setLayout(pnlHistoryDiseaseLayout);
        pnlHistoryDiseaseLayout.setHorizontalGroup(
            pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblDoctorName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblPassIllness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCurrentMedicataion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(srcPassIllness, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(srcCurrentMediation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(txtDoctorName))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHistoryDiseaseLayout.setVerticalGroup(
            pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                        .add(lblCurrentMedicataion)
                        .add(27, 27, 27)
                        .add(lblPassIllness)
                        .add(32, 32, 32))
                    .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                        .add(srcCurrentMediation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(srcPassIllness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblDoctorName)
                    .add(txtDoctorName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pnlChildDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Child's parent detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        pnlChildDetail.setFont(new java.awt.Font("Tahoma", 0, 10));

        lblParentName.setText("Name:");

        lblWorkNumber.setText("Work number:");

        lblMobileNumber.setText("Mobile number:");

        lblEmailAddress.setText("Email address:");

        org.jdesktop.layout.GroupLayout pnlChildDetailLayout = new org.jdesktop.layout.GroupLayout(pnlChildDetail);
        pnlChildDetail.setLayout(pnlChildDetailLayout);
        pnlChildDetailLayout.setHorizontalGroup(
            pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, lblMobileNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, lblEmailAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblWorkNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(lblParentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, txtWorkNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, txtMobileNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(txtParentName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .add(txtEmailAddress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlChildDetailLayout.setVerticalGroup(
            pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtParentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblParentName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtWorkNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblWorkNumber))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblMobileNumber)
                    .add(txtMobileNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblEmailAddress)
                    .add(txtEmailAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pnlOtherInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Other information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblNextOfKinContact.setText("Next-of-kin-contact:");

        lblNoteAboutChild.setText("Note of about child:");

        txtNextOfKinContact.setColumns(20);
        txtNextOfKinContact.setRows(5);
        srcNextOfContact.setViewportView(txtNextOfKinContact);

        txtNoteOfChild.setColumns(20);
        txtNoteOfChild.setRows(5);
        srcNoteAboutChild.setViewportView(txtNoteOfChild);

        org.jdesktop.layout.GroupLayout pnlOtherInformationLayout = new org.jdesktop.layout.GroupLayout(pnlOtherInformation);
        pnlOtherInformation.setLayout(pnlOtherInformationLayout);
        pnlOtherInformationLayout.setHorizontalGroup(
            pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOtherInformationLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblNoteAboutChild, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblNextOfKinContact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(srcNextOfContact, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(srcNoteAboutChild, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlOtherInformationLayout.setVerticalGroup(
            pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOtherInformationLayout.createSequentialGroup()
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlOtherInformationLayout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(lblNextOfKinContact)
                        .add(33, 33, 33)
                        .add(lblNoteAboutChild))
                    .add(pnlOtherInformationLayout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(srcNextOfContact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(srcNoteAboutChild, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(21, 21, 21))
        );

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close2.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel1.setText("Update information of the child");

        jLabel2.setText("Registration date:");

        txtDateRegistration.setEnabled(false);

        jLabel3.setText("Date received:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel5.setText("Date format: dd/MM/yyyy");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel6.setText("Date format: dd/MM/yyyy");

        jLabel7.setText("Name of nanny:");

        btnChangeNanny.setText("Change");
        btnChangeNanny.setMargin(new java.awt.Insets(0, 14, 0, 14));
        btnChangeNanny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeNannyActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(54, 54, 54)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(19, 19, 19)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel2)
                                    .add(layout.createSequentialGroup()
                                        .add(10, 10, 10)
                                        .add(jLabel3)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(txtDateReceived)
                                    .add(txtDateRegistration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel5)
                                    .add(jLabel6))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, pnlChildProfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, pnlChildDetail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(48, 48, 48)
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(txtNannyName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnChangeNanny))
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(pnlOtherInformation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(pnlHistoryDisease, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(263, 263, 263)
                        .add(btnSave)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnReset)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnCancel)))
                .add(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlChildProfile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, pnlHistoryDisease, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(35, 35, 35)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlOtherInformation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .add(pnlChildDetail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtDateRegistration, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtDateReceived, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(jLabel6)
                    .add(jLabel7)
                    .add(btnChangeNanny)
                    .add(txtNannyName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnReset)
                    .add(btnCancel)
                    .add(btnSave))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangeNannyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeNannyActionPerformed
// TODO add your handling code here:
        //Show dialog to select nanny
        //new dialog_Update_InformationOfChild(this, true, sConn, child, sSQL).setVisible(true);
        new dialog_SelectNanny(main, true, sConn, child, this).setVisible(true);
    }//GEN-LAST:event_btnChangeNannyActionPerformed
    
    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
// TODO add your handling code here:
        showForm(child);
    }//GEN-LAST:event_btnResetActionPerformed
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        //check input child profile
        if (this.txtLastName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the last name of child.");
            return;
        }
        child.setLastName(this.txtLastName.getText());
        
        if (this.txtFirstName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the first name of child.");
            return;
        }
        child.setFirstName(this.txtFirstName.getText());
        
        if (this.txtMiddleName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the middle name of child.");
            return;
        }
        child.setMiddleName(this.txtMiddleName.getText());
        
        if (this.txtDateOfBirth.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the birth date of child.");
            return;
        }else {
            if (!daochild.isValidDate(this.txtDateOfBirth.getText())) {
                JOptionPane.showMessageDialog(this, "The date of birth is not right Date Format (dd/MM/yyyy)");
                return;
            }
        }

        child.setDateOfBirth(this.txtDateOfBirth.getText());
        child.setGroupAgeCode(this.cbGroupAge.getSelectedItem().toString());
        
        //check parent of child
        if (this.txtParentName.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the parent name of child.");
            return;
        }
        child.setParentName(this.txtParentName.getText());
        
        if (this.txtMobileNumber.getText().trim().equals("") && this.txtWorkNumber.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You must entered the work number or mobile number.");
            return;
        }else {
            if (!this.txtMobileNumber.getText().trim().equals("")) {
                if (daochild.blCheckIsNumber(this.txtMobileNumber.getText().trim())) {
                    JOptionPane.showMessageDialog(this, "You must entered the string number into mobile number text box");
                    return;
                }
                if (!this.txtWorkNumber.getText().trim().equals("")) {
                    if (daochild.blCheckIsNumber(this.txtWorkNumber.getText().trim())) {
                        JOptionPane.showMessageDialog(this, "You must entered the string number into work number text box");
                        return;
                    }
                }
            }
        }

        if (this.txtDateReceived.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this,"You have not enter the receied date of child.");
            return;
        }else {
            if (!daochild.isValidDate(this.txtDateReceived.getText())) {
                JOptionPane.showMessageDialog(this, "The received date is not right Date Format (dd/MM/yyyy)");
                return;
            }
        }

        if (!this.txtEmailAddress.getText().equals("") && daochild.isEmail(this.txtEmailAddress.getText())) {
            JOptionPane.showMessageDialog(this, "Email is invalid format");
            return;
        }

        child.setParentMobileNumber(this.txtMobileNumber.getText());
        child.setParentWorkNumber(this.txtWorkNumber.getText());
        child.setParentEmailAddress(this.txtEmailAddress.getText());
        
        //Save the current medication
        child.setCurrentMedication(this.txtCurrentMedication.getText());
        child.setPassIllness(this.txtPassIllness.getText());
        child.setDoctorName(this.txtDoctorName.getText());
        
        //save the other information
        child.setnextOfKinContact(this.txtNextOfKinContact.getText());
        child.setnoteAboutChild(this.txtNoteOfChild.getText());
        child.setNannyName(this.txtNannyName.getText());
        child.setDateReceived(this.txtDateReceived.getText());
        child.setDateRegistration(this.txtDateRegistration.getText());
        
        int iResult = JOptionPane.showConfirmDialog(this, "Do you want to save the changes", "Confirm", JOptionPane.YES_NO_OPTION);
        if (iResult==JOptionPane.YES_OPTION){
            try {
                iResult = daochild.UpdateChild(child);
                if (iResult==1){
                    // reload data                    
                    frmParent.LoadDataIntoJTable(sSQL, sConn);
                    JOptionPane.showMessageDialog(this,"Information of the Child was saved.");                    
                } else {
                    if(iResult==-1){                        
                        JOptionPane.showMessageDialog(this,"Can not find information of the child to update.");
                    } else if(iResult==2){
                        JOptionPane.showMessageDialog(this,"Can not select the group age code.");
                    }
                }
                this.setVisible(true);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dialog_Update_InformationOfChild(new javax.swing.JFrame(), true, sConn, child, sSQL, frmParent).setVisible(true);
            }
        });
    }
    
    public void showComboxGroupAge(){
        String sSQL1 = "Select GroupAgeCode, AgeGroup From tbl_AgeGroup Order By AgeGroup Asc";
        int i=0;
        try{
            cbGroupAge.removeAllItems();
            
            Object[] ItemList = daochild.showComboxData(sSQL1);
            
            while(i<ItemList.length){
                cbGroupAge.addItem(ItemList[i]);
                i++;
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void showForm(Child child){
        if (child!=null){
            this.txtCurrentMedication.setText(child.getCurrentMedication());
            this.txtDateOfBirth.setText(child.getDateOfBirth());
            this.txtDoctorName.setText(child.getDoctorName());
            this.txtEmailAddress.setText(child.getParentEmailAddress());
            this.txtFirstName.setText(child.getFirstName());
            this.txtLastName.setText(child.getLastName());
            this.txtMiddleName.setText(child.getMiddleName());
            this.txtMobileNumber.setText(child.getParentMobileNumber());
            this.txtNextOfKinContact.setText(child.getnextOfKinContact());
            this.txtNoteOfChild.setText(child.getnoteAboutChild());
            this.txtParentName.setText(child.getParentName());
            this.txtPassIllness.setText(child.getPassIllness());
            this.txtWorkNumber.setText(child.getParentWorkNumber());
            this.txtDateRegistration.setText(child.getDateRegistration());
            this.txtDateReceived.setText(child.getDateReceived());
            this.txtNannyName.setText(child.getNannyName());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangeNanny;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbGroupAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblCurrentMedicataion;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGroupAge;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblMobileNumber;
    private javax.swing.JLabel lblNextOfKinContact;
    private javax.swing.JLabel lblNoteAboutChild;
    private javax.swing.JLabel lblParentName;
    private javax.swing.JLabel lblPassIllness;
    private javax.swing.JLabel lblWorkNumber;
    private javax.swing.JPanel pnlChildDetail;
    private javax.swing.JPanel pnlChildProfile;
    private javax.swing.JPanel pnlHistoryDisease;
    private javax.swing.JPanel pnlOtherInformation;
    private javax.swing.JScrollPane srcCurrentMediation;
    private javax.swing.JScrollPane srcNextOfContact;
    private javax.swing.JScrollPane srcNoteAboutChild;
    private javax.swing.JScrollPane srcPassIllness;
    private javax.swing.JTextArea txtCurrentMedication;
    private javax.swing.JTextField txtDateOfBirth;
    private javax.swing.JTextField txtDateReceived;
    private javax.swing.JTextField txtDateRegistration;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtNannyName;
    private javax.swing.JTextArea txtNextOfKinContact;
    private javax.swing.JTextArea txtNoteOfChild;
    private javax.swing.JTextField txtParentName;
    private javax.swing.JTextArea txtPassIllness;
    private javax.swing.JTextField txtWorkNumber;
    // End of variables declaration//GEN-END:variables
    
}
