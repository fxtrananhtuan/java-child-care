/*
 * dialog_Add_Update_InformationOfChild.java
 *
 * Created on June 7, 2009, 2:50 PM
 */
package InformationOfChild;

import MainProgram.MainForm;
import java.sql.SQLException;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author  Tuong Huy
 */
public class dialog_Add_InformationOfChild extends javax.swing.JDialog {

    DAO_Child daochild = null;
    private static frm_ChildList frmParent = null;
    public static String sSQL = "";
    public static String sConn = "";
    private static MainForm main = null;

    /** Creates new form dialog_Add_Update_InformationOfChild */
    public dialog_Add_InformationOfChild(java.awt.Frame parent, boolean modal, String _sConn, String _sSQL, JInternalFrame frm) {
        super(parent, modal);
        initComponents();
        main = (MainForm) parent;
        frmParent = (frm_ChildList) frm;
        sConn = _sConn;
        sSQL = _sSQL;
        daochild = new DAO_Child(sConn);

        showComboxGroupAge();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlChildProfile = new javax.swing.JPanel();
        lblLastName = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblMiddleName = new javax.swing.JLabel();
        lblDateOfBirth = new javax.swing.JLabel();
        lblGroupAge = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtMiddleName = new javax.swing.JTextField();
        txtDateOfBirth = new javax.swing.JTextField();
        cbGroupAge = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        pnlHistoryDisease = new javax.swing.JPanel();
        lblCurrentMedicataion = new javax.swing.JLabel();
        lblPassIllness = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        srcCurrentMediation = new javax.swing.JScrollPane();
        txtCurrentMedication = new javax.swing.JTextArea();
        srcPassIllness = new javax.swing.JScrollPane();
        txtPassIllness = new javax.swing.JTextArea();
        txtDoctorName = new javax.swing.JTextField();
        pnlParentDetail = new javax.swing.JPanel();
        lblParentName = new javax.swing.JLabel();
        lblWorkNumber = new javax.swing.JLabel();
        lblMobileNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        txtParentName = new javax.swing.JTextField();
        txtWorkNumber = new javax.swing.JTextField();
        txtMobileNumber = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        pnlOtherInformation = new javax.swing.JPanel();
        lblNextOfKinContact = new javax.swing.JLabel();
        lblNoteAboutChild = new javax.swing.JLabel();
        srcNextOfContact = new javax.swing.JScrollPane();
        txtNextOfKinContact = new javax.swing.JTextArea();
        srcNoteAboutChild = new javax.swing.JScrollPane();
        txtNoteOfChild = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new detail information of the child");

        pnlChildProfile.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Child profile", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblLastName.setText("Last name:");

        lblFirstName.setText("First name:");

        lblMiddleName.setText("Middle name:");

        lblDateOfBirth.setText("Date of birth:");

        lblGroupAge.setText("Group age:");

        cbGroupAge.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("fortmat: dd/MM/yyyy");

        org.jdesktop.layout.GroupLayout pnlChildProfileLayout = new org.jdesktop.layout.GroupLayout(pnlChildProfile);
        pnlChildProfile.setLayout(pnlChildProfileLayout);
        pnlChildProfileLayout.setHorizontalGroup(
            pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildProfileLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblGroupAge, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblMiddleName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(12, 12, 12)
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(txtLastName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .add(txtFirstName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .add(txtMiddleName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .add(pnlChildProfileLayout.createSequentialGroup()
                        .add(txtDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2))
                    .add(cbGroupAge, 0, 241, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlChildProfileLayout.setVerticalGroup(
            pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlChildProfileLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlChildProfileLayout.createSequentialGroup()
                        .add(txtLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblFirstName))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtMiddleName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblMiddleName)))
                    .add(lblLastName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(txtDateOfBirth, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel2))
                    .add(lblDateOfBirth))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlChildProfileLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cbGroupAge, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblGroupAge))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlHistoryDisease.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HISTORY disease", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblCurrentMedicataion.setText("Current medication:");

        lblPassIllness.setText("Pass illness:");

        lblDoctorName.setText("Doctor name:");

        txtCurrentMedication.setColumns(20);
        txtCurrentMedication.setRows(5);
        srcCurrentMediation.setViewportView(txtCurrentMedication);

        txtPassIllness.setColumns(20);
        txtPassIllness.setRows(5);
        srcPassIllness.setViewportView(txtPassIllness);

        org.jdesktop.layout.GroupLayout pnlHistoryDiseaseLayout = new org.jdesktop.layout.GroupLayout(pnlHistoryDisease);
        pnlHistoryDisease.setLayout(pnlHistoryDiseaseLayout);
        pnlHistoryDiseaseLayout.setHorizontalGroup(
            pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblDoctorName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblPassIllness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCurrentMedicataion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(srcPassIllness, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(srcCurrentMediation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(txtDoctorName))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHistoryDiseaseLayout.setVerticalGroup(
            pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                        .add(lblCurrentMedicataion)
                        .add(27, 27, 27)
                        .add(lblPassIllness)
                        .add(32, 32, 32))
                    .add(pnlHistoryDiseaseLayout.createSequentialGroup()
                        .add(srcCurrentMediation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(srcPassIllness, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(pnlHistoryDiseaseLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblDoctorName)
                    .add(txtDoctorName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlParentDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Child's parent detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblParentName.setText("Name:");

        lblWorkNumber.setText("Work number:");

        lblMobileNumber.setText("Mobile number:");

        lblEmailAddress.setText("Email address:");

        org.jdesktop.layout.GroupLayout pnlParentDetailLayout = new org.jdesktop.layout.GroupLayout(pnlParentDetail);
        pnlParentDetail.setLayout(pnlParentDetailLayout);
        pnlParentDetailLayout.setHorizontalGroup(
            pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlParentDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblWorkNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblParentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblMobileNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblEmailAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, txtParentName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .add(txtWorkNumber)
                        .add(txtMobileNumber, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                    .add(txtEmailAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 241, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlParentDetailLayout.setVerticalGroup(
            pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlParentDetailLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblParentName)
                    .add(txtParentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblWorkNumber)
                    .add(txtWorkNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblMobileNumber)
                    .add(txtMobileNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlParentDetailLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblEmailAddress)
                    .add(txtEmailAddress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pnlOtherInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Other information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        lblNextOfKinContact.setText("Next-of-kin-contact:");

        lblNoteAboutChild.setText("Note of about child:");

        txtNextOfKinContact.setColumns(20);
        txtNextOfKinContact.setRows(5);
        srcNextOfContact.setViewportView(txtNextOfKinContact);

        txtNoteOfChild.setColumns(20);
        txtNoteOfChild.setRows(5);
        srcNoteAboutChild.setViewportView(txtNoteOfChild);

        org.jdesktop.layout.GroupLayout pnlOtherInformationLayout = new org.jdesktop.layout.GroupLayout(pnlOtherInformation);
        pnlOtherInformation.setLayout(pnlOtherInformationLayout);
        pnlOtherInformationLayout.setHorizontalGroup(
            pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOtherInformationLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblNoteAboutChild, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblNextOfKinContact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(srcNoteAboutChild, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(srcNextOfContact, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlOtherInformationLayout.setVerticalGroup(
            pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlOtherInformationLayout.createSequentialGroup()
                .add(pnlOtherInformationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlOtherInformationLayout.createSequentialGroup()
                        .add(30, 30, 30)
                        .add(lblNextOfKinContact)
                        .add(33, 33, 33)
                        .add(lblNoteAboutChild))
                    .add(pnlOtherInformationLayout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(srcNextOfContact, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(srcNoteAboutChild, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(19, 19, 19))
        );

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close2.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabel1.setText("Add new information of the child");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnlParentDetail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(pnlChildProfile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(26, 26, 26)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(pnlOtherInformation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(pnlHistoryDisease, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(266, 266, 266)
                        .add(btnSave)
                        .add(23, 23, 23)
                        .add(btnReset)
                        .add(19, 19, 19)
                        .add(btnCancel))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(30, 30, 30)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlChildProfile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlHistoryDisease, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(pnlOtherInformation, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .add(pnlParentDetail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(23, 23, 23)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnReset)
                    .add(btnCancel)
                    .add(btnSave))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
// TODO add your handling code here:
        this.txtCurrentMedication.setText("");
        this.txtDateOfBirth.setText("");
        this.txtDoctorName.setText("");
        this.txtEmailAddress.setText("");
        this.txtFirstName.setText("");
        this.txtLastName.setText("");
        this.txtMiddleName.setText("");
        this.txtMobileNumber.setText("");
        this.txtNextOfKinContact.setText("");
        this.txtNoteOfChild.setText("");
        this.txtParentName.setText("");
        this.txtPassIllness.setText("");
        this.txtWorkNumber.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
// TODO add your handling code here:        
        Child child = new Child();
        //check input child profile
        if (this.txtLastName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You have not enter the last name of child.");
            return;
        }
        child.setChildCode("");
        child.setLastName(this.txtLastName.getText());

        if (this.txtFirstName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You have not enter the first name of child.");
            return;
        }
        child.setFirstName(this.txtFirstName.getText());

        if (this.txtMiddleName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You have not enter the middle name of child.");
            return;
        }
        child.setMiddleName(this.txtMiddleName.getText());

        if (this.txtDateOfBirth.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You have not enter the birth date of child.");
            return;
        } else {
            if (!daochild.isValidDate(this.txtDateOfBirth.getText())) {
                JOptionPane.showMessageDialog(this, "The date of birth is not right Date Format (dd/MM/yyyy)");
                return;
            }
        }
        child.setDateOfBirth(this.txtDateOfBirth.getText());
        child.setGroupAgeCode(this.cbGroupAge.getSelectedItem().toString());

        //check parent of child
        if (this.txtParentName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You have not enter the parent name of child.");
            return;
        }
        child.setParentName(this.txtParentName.getText());

        if (this.txtMobileNumber.getText().trim().equals("") && this.txtWorkNumber.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "You must entered the work number or mobile number.");
            return;
        } else {
            if (!this.txtMobileNumber.getText().trim().equals("")) {
                if (daochild.blCheckIsNumber(this.txtMobileNumber.getText().trim())) {
                    JOptionPane.showMessageDialog(this, "You must entered the string number into mobile number text box");
                    return;
                }
                if (!this.txtWorkNumber.getText().trim().equals("")) {
                    if (daochild.blCheckIsNumber(this.txtWorkNumber.getText().trim())) {
                        JOptionPane.showMessageDialog(this, "You must entered the string number into work number text box");
                        return;
                    }
                }
            }
        }

        if (!this.txtEmailAddress.getText().equals("") && daochild.isEmail(this.txtEmailAddress.getText())) {
            JOptionPane.showMessageDialog(this, "Email is invalid format");
            return;
        }

        child.setParentMobileNumber(this.txtMobileNumber.getText());
        child.setParentWorkNumber(this.txtWorkNumber.getText());
        child.setParentEmailAddress(this.txtEmailAddress.getText());

        //Save the current medication
        child.setCurrentMedication(this.txtCurrentMedication.getText());
        child.setPassIllness(this.txtPassIllness.getText());
        child.setDoctorName(this.txtDoctorName.getText());

        //save the other information
        child.setnextOfKinContact(this.txtNextOfKinContact.getText());
        child.setnoteAboutChild(this.txtNoteOfChild.getText());

        int iResult = JOptionPane.showConfirmDialog(this, "Do you want to select nanny\\babysister for the child?", "Message", JOptionPane.YES_NO_OPTION);

        if (iResult == JOptionPane.YES_OPTION) {
            new dialog_SelectNannyForChild(main, true, sConn, sSQL, child, this).setVisible(true);
        } else {
            iResult = JOptionPane.showConfirmDialog(this, "Do you want to save changes?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (iResult == JOptionPane.YES_OPTION) {
                try {
                    iResult = daochild.AddChild(child);
                    if (iResult == 1) {
                        // reload data
                        frmParent.LoadDataIntoJTable(sSQL, sConn);
                        JOptionPane.showMessageDialog(this, "Information of the Child was saved.");
                    } else {
                        if (iResult == 0) {
                            JOptionPane.showMessageDialog(this, "Information of the Child was not saved. Please try gain.");
                        } else if (iResult == -2) {
                            JOptionPane.showMessageDialog(this, "Can not select the group age code.");
                        }
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new dialog_Add_InformationOfChild(new javax.swing.JFrame(), true, sConn, sSQL, frmParent).setVisible(true);
            }
        });
    }

    public void showComboxGroupAge() {
        String sSQL1 = "Select GroupAgeCode, AgeGroup From tbl_AgeGroup Order By AgeGroup Asc";
        int i = 0;
        try {
            cbGroupAge.removeAllItems();

            Object[] ItemList = daochild.showComboxData(sSQL1);

            while (i < ItemList.length) {
                cbGroupAge.addItem(ItemList[i]);
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbGroupAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblCurrentMedicataion;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGroupAge;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JLabel lblMobileNumber;
    private javax.swing.JLabel lblNextOfKinContact;
    private javax.swing.JLabel lblNoteAboutChild;
    private javax.swing.JLabel lblParentName;
    private javax.swing.JLabel lblPassIllness;
    private javax.swing.JLabel lblWorkNumber;
    private javax.swing.JPanel pnlChildProfile;
    private javax.swing.JPanel pnlHistoryDisease;
    private javax.swing.JPanel pnlOtherInformation;
    private javax.swing.JPanel pnlParentDetail;
    private javax.swing.JScrollPane srcCurrentMediation;
    private javax.swing.JScrollPane srcNextOfContact;
    private javax.swing.JScrollPane srcNoteAboutChild;
    private javax.swing.JScrollPane srcPassIllness;
    private javax.swing.JTextArea txtCurrentMedication;
    private javax.swing.JTextField txtDateOfBirth;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextArea txtNextOfKinContact;
    private javax.swing.JTextArea txtNoteOfChild;
    private javax.swing.JTextField txtParentName;
    private javax.swing.JTextArea txtPassIllness;
    private javax.swing.JTextField txtWorkNumber;
    // End of variables declaration//GEN-END:variables
}
